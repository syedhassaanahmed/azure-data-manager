{
    "contentVersion": "1.0.0.0",
    "$schema": "http://schema.management.azure.com/schemas/2018-05-01/deploymentTemplate.json#",
    "parameters": {
        "dataFactoryName": {
            "type": "string",
            "defaultValue": "datamanager-adf",
            "metadata": {
                "description": "Name of the Data Factory. Must be globally unique."
            }
        },
        "databricksWorkspaceName": {
            "type": "string",
            "defaultValue": "datamanager-adb",
            "metadata": {
                "description": "Name of the Databricks workspace."
            }
        },
        "databricksSecretName": {
            "type": "string",
            "defaultValue": "databricks",
            "metadata": {
                "description": "Secret Name of the Databricks token in key vault."
            }
        },
        "storageAccountPrefix": {
            "type": "string",
            "defaultValue": "datamanager",
            "metadata": {
                "description": "Prefix to be used in storage account name."
            }
        },
        "storageAccountSecretName": {
            "type": "string",
            "defaultValue": "blobStorage",
            "metadata": {
                "description": "Secret Name of the storage account in key vault."
            }
        },
        "sqlServerName": {
            "type": "string",
            "defaultValue": "datamanager-sqlserver",
            "metadata": {
                "description": "Name of SQL Server. Must be globally unique."
            }
        },
        "sqlDBName": {
            "type": "string",
            "defaultValue": "datamanager-sqldb",
            "metadata": {
                "description": "Name of SQL Database"
            }
        },
        "sqlAdminUser": {
            "type": "string",
            "defaultValue": "datamanager-sqluser",
            "metadata": {
                "description": "Admin user of SQL Server"
            }
        },
        "sqlAdminPassword": {
            "type": "secureString",
            "metadata": {
                "description": "Password of the admin user of SQL Server"
            }
        },
        "sqlServerSecretName": {
            "type": "string",
            "defaultValue": "sqlServer",
            "metadata": {
                "description": "Secret Name of the SQL Server in key vault."
            }
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": "datamanager-kv",
            "metadata": {
                "description": "Name of the Key Vault. Must be globally unique."
            }
        },
        "azureADClientID": {
            "type": "string",
            "metadata": {
                "description": "Azure AD Application ID for the Web App to use for Authentication."
            }
        },
        "azureADClientSecret": {
            "type": "secureString",
            "metadata": {
                "description": "Azure AD App password for the Web App to use for ADF operations."
            }
        },
        "cosmosDBAccountName": {
            "type": "string",
            "defaultValue": "datamanager-cosmos",
            "metadata": {
                "description": "Account name of Cosmos DB. Must be globally unique."
            }
        },
        "cosmosDBDatabaseName": {
            "type": "string",
            "defaultValue": "data-manager",
            "metadata": {
                "description": "Database name of Cosmos DB."
            }
        },
        "webAppName": {
            "type": "string",
            "defaultValue": "datamanager-web",
            "metadata": {
                "description": "Name of the App Service and Service Plan. Must be globally unique."
            }
        },
        "webAppSKUName": {
            "type": "string",
            "defaultValue": "B1",
            "metadata": {
                "description": "Size of the App Service plan."
            }
        },
        "webAppSKUTier": {
            "type": "string",
            "allowedValues": [
                "Free",
                "Shared",
                "Basic",
                "Standard"
            ],
            "defaultValue": "Basic",
            "metadata": {
                "description": "Pricing tier for the App Service plan."
            }
        },
        "webAppCapacity": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of App Service instances."
            }
        }
    },
    "variables": {
        "tenantId": "[subscription().tenantId]",
        "dataFactoryId": "[resourceId('Microsoft.DataFactory/factories/', parameters('dataFactoryName'))]",
        "managedDatabricksRGName": "[concat('databricks-rg-', parameters('databricksWorkspaceName'), '-', uniqueString(parameters('databricksWorkspaceName'), resourceGroup().id))]",
        "storageAccountName": "[concat(parameters('storageAccountPrefix'), uniqueString(resourceGroup().id))]",
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "keyVaultId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "keyVaultLinkedReferenceId": "[concat(variables('dataFactoryId'), '/linkedServices/', parameters('keyVaultName'))]",
        "webAppId": "[resourceId('Microsoft.Web/Sites', parameters('webAppName'))]",
        "repoURL": ""
    },
    "resources": [
        {
            "name": "[parameters('cosmosDbAccountName')]",
            "type": "Microsoft.DocumentDb/databaseAccounts",
            "apiVersion": "2016-03-31",
            "kind": "GlobalDocumentDB",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[parameters('cosmosDbAccountName')]",
                "databaseAccountOfferType": "Standard"
            }
        },
        {
            "name": "[parameters('sqlServerName')]",
            "apiVersion": "2018-06-01-preview",
            "type": "Microsoft.Sql/servers",
            "location": "[resourceGroup().location]",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "[parameters('sqlAdminUser')]",
                "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "name": "[parameters('sqlDBName')]",
                    "apiVersion": "2018-06-01-preview",
                    "type": "databases",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[parameters('sqlServerName')]"
                    ],
                    "properties": {
                        "edition": "Basic",
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "maxSizeBytes": "1073741824",
                        "requestedServiceObjectiveName": "Basic"
                    }
                },
                {
                    "type": "firewallRules",
                    "apiVersion": "2018-06-01-preview",
                    "dependsOn": [
                        "[parameters('sqlServerName')]"
                    ],
                    "location": "[resourceGroup().location]",
                    "name": "AllowAllAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        {
            "name": "[parameters('dataFactoryName')]",
            "apiVersion": "2018-06-01",
            "type": "Microsoft.DataFactory/factories",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Databricks/workspaces",
            "name": "[parameters('databricksWorkspaceName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2018-04-01",
            "sku": {
                "name": "standard"
            },
            "properties": {
                "ManagedResourceGroupId": "[concat(subscription().id, '/resourceGroups/', variables('managedDatabricksRGName'))]"
            }
        },
        {
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2018-07-01",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "accessTier": "Hot",
                "encryption": {
                    "services": {
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "name": "[parameters('keyVaultName')]",
            "apiVersion": "2018-02-14",
            "type": "Microsoft.KeyVault/vaults",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[variables('tenantId')]",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "accessPolicies": [
                    {
                        "tenantId": "[variables('tenantId')]",
                        "objectId": "[reference(concat('Microsoft.DataFactory/factories/', parameters('dataFactoryName')), '2018-06-01', 'Full').identity.principalId]",
                        "permissions": {
                            "secrets": [
                                "Get",
                                "List"
                            ]
                        }
                    }
                ]
            },
            "dependsOn": [
                "[variables('dataFactoryId')]"
            ]
        },
        {
            "name": "[concat(parameters('keyVaultName'), '/', parameters('storageAccountSecretName'))]",
            "apiVersion": "2018-02-14",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "properties": {
                "contentType": "string",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2018-07-01').keys[0].value)]"
            },
            "dependsOn": [
                "[variables('keyVaultId')]",
                "[variables('storageAccountId')]"
            ]
        },
        {
            "name": "[concat(parameters('keyVaultName'), '/', parameters('sqlServerSecretName'))]",
            "apiVersion": "2018-02-14",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "properties": {
                "contentType": "string",
                "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', parameters('sqlServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('sqlDBName'), ';User Id=', parameters('sqlAdminUser'), '@', reference(concat('Microsoft.Sql/servers/', parameters('sqlServerName'))).fullyQualifiedDomainName, ';Password=', parameters('sqlAdminPassword'), ';')]"
            },
            "dependsOn": [
                "[variables('keyVaultId')]",
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
            ]
        },
        {
            "name": "[concat(parameters('dataFactoryName'), '/', parameters('keyVaultName'))]",
            "apiVersion": "2018-06-01",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "properties": {
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[reference(concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))).vaultUri]"
                }
            },
            "dependsOn": [
                "[variables('keyVaultId')]"
            ]
        },
        {
            "name": "[concat(parameters('dataFactoryName'), '/', parameters('storageAccountSecretName'))]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "[parameters('keyVaultName')]",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[parameters('storageAccountSecretName')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('keyVaultLinkedReferenceId')]"
            ]
        },
        {
            "name": "[concat(parameters('dataFactoryName'), '/', parameters('sqlServerSecretName'))]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "[parameters('keyVaultName')]",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[parameters('sqlServerSecretName')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('keyVaultLinkedReferenceId')]"
            ]
        },
        {
            "name": "[parameters('webAppName')]",
            "type": "Microsoft.Web/serverFarms",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('webAppSKUName')]",
                "tier": "[parameters('webAppSKUTier')]",
                "capacity": "[parameters('webAppCapacity')]"
            }
        },
        {
            "name": "[parameters('webAppName')]",
            "type": "Microsoft.Web/Sites",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Web/serverFarms/', parameters('webAppName'))]"
            ],
            "resources": [
                {
                    "name": "AspNetCoreRuntime",
                    "type": "siteextensions",
                    "apiVersion": "2018-02-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[variables('webAppId')]"
                    ]
                },
                {
                    "name": "web",
                    "type": "sourcecontrols",
                    "apiVersion": "2018-02-01",
                    "dependsOn": [
                        "[variables('webAppId')]"
                    ],
                    "properties": {
                        "RepoUrl": "[variables('repoURL')]",
                        "branch": "master",
                        "IsManualIntegration": true
                    }
                }
            ],
            "properties": {
                "name": "[parameters('webAppName')]",
                "serverFarmId": "[parameters('webAppName')]",
                "alwaysOn": true,
                "use32BitWorkerProcess": false,
                "siteConfig": {
                    "appSettings": [
                        {
                            "Name": "LoadSampleData",
                            "Value": true
                        },
                        {
                            "Name": "CosmosDb:Endpoint",
                            "Value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('cosmosDBAccountName'))).documentEndpoint]"
                        },
                        {
                            "Name": "CosmosDb:PrimaryKey",
                            "Value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('cosmosDBAccountName')), '2015-04-08').primaryMasterKey]"
                        },
                        {
                            "Name": "CosmosDb:Database",
                            "Value": "[parameters('cosmosDBDatabaseName')]"
                        },
                        {
                            "Name": "AzureAd:Instance",
                            "Value": "https://login.microsoftonline.com/"
                        },
                        {
                            "Name": "AzureAd:Domain",
                            "Value": "[variables('tenantId')]"
                        },
                        {
                            "Name": "AzureAd:TenantId",
                            "Value": "[variables('tenantId')]"
                        },
                        {
                            "Name": "AzureAd:ClientId",
                            "Value": "[parameters('azureADClientID')]"
                        },
                        {
                            "Name": "AzureAd:CallbackPath",
                            "Value": "/signin-oidc"
                        },
                        {
                            "Name": "AzureAd:ClientSecret",
                            "Value": "[parameters('azureADClientSecret')]"
                        },
                        {
                            "Name": "DataFactory:SubscriptionId",
                            "Value": "[subscription().subscriptionId]"
                        },
                        {
                            "Name": "DataFactory:ResourceGroup",
                            "Value": "[resourceGroup().name]"
                        },
                        {
                            "Name": "DataFactory:Name",
                            "Value": "[parameters('dataFactoryName')]"
                        },
                        {
                            "Name": "KeyVault:Name",
                            "Value": "[parameters('keyVaultName')]"
                        },
                        {
                            "Name": "StorageAccount:Name",
                            "Value": "[variables('storageAccountName')]"
                        },
                        {
                            "Name": "Databricks:Endpoint",
                            "Value": "[concat('https://', resourceGroup().location, '.azuredatabricks.net')]"
                        },
                        {
                            "Name": "Databricks:KeyVaultSecretName",
                            "Value": "[parameters('databricksSecretName')]"
                        }
                    ]
                }
            }
        }
    ]
}